//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Service1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProduct", ReplyAction="http://tempuri.org/IService1/InsertProductResponse")]
        string InsertProduct(string item, string type, string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProduct", ReplyAction="http://tempuri.org/IService1/InsertProductResponse")]
        System.Threading.Tasks.Task<string> InsertProductAsync(string item, string type, string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        string DeleteProduct(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task<string> DeleteProductAsync(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowProductTable", ReplyAction="http://tempuri.org/IService1/ShowProductTableResponse")]
        System.Data.DataTable ShowProductTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowProductTable", ReplyAction="http://tempuri.org/IService1/ShowProductTableResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ShowProductTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        System.Data.DataTable GetProduct(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProductAsync(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        string UpdateProduct(string name, string item, string type, string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task<string> UpdateProductAsync(string name, string item, string type, string des);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.Service1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.Service1.IService1>, Client.Service1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertProduct(string item, string type, string des) {
            return base.Channel.InsertProduct(item, type, des);
        }
        
        public System.Threading.Tasks.Task<string> InsertProductAsync(string item, string type, string des) {
            return base.Channel.InsertProductAsync(item, type, des);
        }
        
        public string DeleteProduct(string item) {
            return base.Channel.DeleteProduct(item);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductAsync(string item) {
            return base.Channel.DeleteProductAsync(item);
        }
        
        public System.Data.DataTable ShowProductTable() {
            return base.Channel.ShowProductTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ShowProductTableAsync() {
            return base.Channel.ShowProductTableAsync();
        }
        
        public System.Data.DataTable GetProduct(string item) {
            return base.Channel.GetProduct(item);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProductAsync(string item) {
            return base.Channel.GetProductAsync(item);
        }
        
        public string UpdateProduct(string name, string item, string type, string des) {
            return base.Channel.UpdateProduct(name, item, type, des);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductAsync(string name, string item, string type, string des) {
            return base.Channel.UpdateProductAsync(name, item, type, des);
        }
    }
}
